<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">


	<http authentication-manager-ref="userDatabase" pattern="/api/**"
		realm="Protected API" use-expressions="true" auto-config="false"
		create-session="stateless" entry-point-ref="CustomAuthenticationEntryPoint">
		<custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />
		<intercept-url pattern="/api/user/authenticate" access="permitAll" />
		<intercept-url pattern="/api/**" access="isAuthenticated()" />
	</http>

	<http auto-config='false' use-expressions="true"
		authentication-manager-ref="userDatabase"
		security-context-repository-ref="userSecurityContextRepo"
		entry-point-ref="CustomAuthenticationEntryPoint">
		<remember-me key="projecthandlerKey" services-ref="rememberMeServices" />
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<session-management session-authentication-strategy-ref="sas" />

		<form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/loginFailed" />
		<logout logout-success-url="/logout" delete-cookies="JSESSIONID" />
		
		<access-denied-handler error-page="/accessDenied" />

		<intercept-url pattern="/" 								access="permitAll" />
		<intercept-url pattern="/login" 						access="permitAll" />
		<intercept-url pattern="/verifyUser" 					access="permitAll" />
		<intercept-url pattern="/welcome" 						access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')" />
		<intercept-url pattern="/ajax/search*"					access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>

		<intercept-url pattern="/signup"						access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/changePassword"				access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		
		<intercept-url pattern="/admin/**" 						access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/checkEmailExists" 				access="hasRole('ROLE_ADMIN')" />
		
		<intercept-url pattern="/gantt/**"						access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>

		
		<intercept-url pattern="/project/save"					access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')" />
		<intercept-url pattern="/project/edit/**"				access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')" />
		<intercept-url pattern="/project/delete"				access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')" />
		<intercept-url pattern="/project/projectsList"			access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/project/viewProject/**"		access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/project/fetchGroupUsers"		access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>

		<intercept-url pattern="/task/**"						access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/subTask/**"					access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/ticket/**"						access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>

		<intercept-url pattern="/calendar/**"					access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		
		<intercept-url pattern="/saveUser"						access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/downloadAvatar/**"				access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/saveAvatar"					access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
		<intercept-url pattern="/profile/**"					access="hasAnyRole('ROLE_ADMIN', 'ROLE_SIMPLE_USER')"/>
	</http>

	<beans:bean id="CustomAuthenticationEntryPoint"
		class="fr.projecthandler.api.authentication.CustomAuthenticationEntryPoint">
		<beans:constructor-arg value="/login" />
	</beans:bean>
	
	<beans:bean id="authenticationTokenProcessingFilter"
		class="fr.projecthandler.api.authentication.AuthenticationTokenProcessingFilter">
	</beans:bean>

	<authentication-manager id="userDatabase">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

        
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		


	<beans:bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<beans:constructor-arg ref="userDatabase" />
		<beans:constructor-arg ref="rememberMeServices" />
	</beans:bean> 

	<beans:bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<beans:constructor-arg value="projecthandlerKey" />
		<beans:constructor-arg ref="customUserDetailsService" />
		<beans:property name="tokenValiditySeconds" value="60480000" />
	</beans:bean>

	<beans:bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:constructor-arg value="projecthandlerKey" />
	</beans:bean>

	<beans:bean id="userSecurityContextRepo"
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

	<beans:bean id="webexpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/invalidateSession" />
	</beans:bean>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="3" />
	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans:beans>
	
	